install.packages(c("MASS", "Matrix", "class", "colorspace", "foreign", "lattice", "mgcv", "nlme", "nnet", "rpart", "spatial"))
#Placeholders
# Step 1 building the scenarios: insert dataframe and read the scenario file. Name parameters
# that need to be replaced with #
xmlFilePath<-"~/Desktop/scenarioB-TM-DE-3.xml"
filestump<-'scenarioX-'
# Step 2 building the scenarios: make separate data vectors
fuelPriceScenarioLength=1
microScenarioLength=120
coalPriceScenario=c("Coal.Medium")
gasPriceScenario=c("NaturalGas.Medium")
fuelPriceScenarios = c("DeccCentral")
demandGrowthScenarios = c("demandCentral")
microScenarioNo<-seq(1,microScenarioLength)
interestRateScenarios = list(mediumInterest=c("#equityInterest"="0.12","#debtInterest"="0.09"),
lowInterest=c("#equityInterest"="0.09","#debtInterest"="0.05"),
highInterest=c("#equityInterest"="0.15","#debtInterest"="0.12"))
#Fixed parameters:
co2PolicyScenarios=list(PureETS=c("#minCWEstart"="0","#minCWEincrement"="0",
"#minGBstart"="0","#minGBincrement"="0",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
MinCWE=c("#minCWEstart"="10","#minCWEincrement"="2",
"#minGBstart"="0","#minGBincrement"="0",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
MinGB=c("#minCWEstart"="0","#minCWEincrement"="0",
"#minGBstart"="10","#minGBincrement"="2",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
BothMin=c("#minCWEstart"="10","#minCWEincrement"="2",
"#minGBstart"="10","#minGBincrement"="2",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
BothMinBothMax=c("#minCWEstart"="10","#minCWEincrement"="2",
"#minGBstart"="10","#minGBincrement"="2",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="60", "#maxCO2increment"="2"))
resPolicyScenarios=list(FRES=c("#cweResPolicy"="/data/policyGoalNREAP_CF_CWE.csv","#gbResPolicy"="/data/policyGoalNREAP_CF_UK.csv"))
for(scenario in interestRateScenarios){
#browser()
for(policyNo in seq(1,length(scenario))){
print(names(scenario)[policyNo])
print(scenario[policyNo])
}
}
# Step 3 building the scenarios: estimating the last three parameters
#${initial_propensity}
resScenarioNo<-1
resScenario<-resPolicyScenarios[1]
interestRateScenarioNo<-1
for(interestRateScenario in interestRateScenarios){
co2scenarioNo<-1
for(co2scenario in co2PolicyScenarios){
for (microId in seq(1:microScenarioLength)){
xmlFileContent<-readLines(xmlFilePath, encoding = "UTF-8")
xmlFileContent<-gsub("#fuelPricePathAndFileName", paste("/data/stochasticFuelPrices/fuelPrices-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#demandPathandFilename", paste("/data/stochasticDemandCWEandGB/demand-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#CoalScenario", coalPriceScenario[1], xmlFileContent)
xmlFileContent<-gsub("#GasScenario", gasPriceScenario[1], xmlFileContent)
for(policyNo in seq(1,length(co2scenario))){
xmlFileContent<-gsub(names(co2scenario)[policyNo], co2scenario[policyNo], xmlFileContent)
}
for(policyNo in seq(1,length(resScenario[[1]]))){
xmlFileContent<-gsub(names(resScenario[[1]])[policyNo], resScenario[[1]][policyNo], xmlFileContent)
}
for(policyNo in seq(1,length(interestRateScenario))){
xmlFileContent<-gsub(names(interestRateScenario)[policyNo], interestRateScenario[policyNo], xmlFileContent)
}
#print(paste("~/Desktop/emlabGen/scenario/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",fuelPriceScenarios[1],"-",demandGrowthScenarios[1],"-",microId,".xml", sep=""))
writeLines(xmlFileContent, paste("~/Desktop/inputScenario/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",names(resPolicyScenarios)[resScenarioNo],"-",fuelPriceScenarios[1],"-",demandGrowthScenarios[1],"-",names(interestRateScenarios)[interestRateScenarioNo],"-",microId,".xml", sep=""))
}
co2scenarioNo<-co2scenarioNo+1
}
interestRateScenarioNo<-interestRateScenarioNo+1
}
#CoalScenario
#GasScenario
#minCWEstart
#minCWEincrement
#minGBstart
#minGBincrement
#minCO2start
#minCO2increment
#maxCO2start
#maxCO2increment
#Placeholders
# Step 1 building the scenarios: insert dataframe and read the scenario file. Name parameters
# that need to be replaced with #
xmlFilePath<-"~/Desktop/ScenarioU-Test.xml"
filestump<-'scenarioX-'
# Step 2 building the scenarios: make separate data vectors
fuelPriceScenarioLength=1
microScenarioLength=120
coalPriceScenario=c("Coal.Medium")
gasPriceScenario=c("NaturalGas.Medium")
fuelPriceScenarios = c("DeccCentral")
demandGrowthScenarios = c("demandCentral")
microScenarioNo<-seq(1,microScenarioLength)
interestRateScenarios = list(mediumInterest=c("#equityInterest"="0.12","#debtInterest"="0.09"),
lowInterest=c("#equityInterest"="0.09","#debtInterest"="0.05"),
highInterest=c("#equityInterest"="0.15","#debtInterest"="0.12"))
#Fixed parameters:
co2PolicyScenarios=list(PureETS=c("#minCWEstart"="0","#minCWEincrement"="0",
"#minGBstart"="0","#minGBincrement"="0",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
MinCWE=c("#minCWEstart"="10","#minCWEincrement"="2",
"#minGBstart"="0","#minGBincrement"="0",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
MinGB=c("#minCWEstart"="0","#minCWEincrement"="0",
"#minGBstart"="10","#minGBincrement"="2",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
BothMin=c("#minCWEstart"="10","#minCWEincrement"="2",
"#minGBstart"="10","#minGBincrement"="2",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="500", "#maxCO2increment"="0"),
BothMinBothMax=c("#minCWEstart"="10","#minCWEincrement"="2",
"#minGBstart"="10","#minGBincrement"="2",
"#minCO2start"="0","#minCO2increment"="0",
"#maxCO2start"="60", "#maxCO2increment"="2"))
resPolicyScenarios=list(FRES=c("#cweResPolicy"="/data/policyGoalNREAP_CF_CWE.csv","#gbResPolicy"="/data/policyGoalNREAP_CF_UK.csv"))
for(scenario in interestRateScenarios){
#browser()
for(policyNo in seq(1,length(scenario))){
print(names(scenario)[policyNo])
print(scenario[policyNo])
}
}
# Step 3 building the scenarios: estimating the last three parameters
#${initial_propensity}
resScenarioNo<-1
resScenario<-resPolicyScenarios[1]
interestRateScenarioNo<-1
for(interestRateScenario in interestRateScenarios){
co2scenarioNo<-1
for(co2scenario in co2PolicyScenarios){
for (microId in seq(1:microScenarioLength)){
xmlFileContent<-readLines(xmlFilePath, encoding = "UTF-8")
xmlFileContent<-gsub("#fuelPricePathAndFileName", paste("/data/stochasticFuelPrices/fuelPrices-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#demandPathandFilename", paste("/data/stochasticDemandCWEandGB/demand-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#CoalScenario", coalPriceScenario[1], xmlFileContent)
xmlFileContent<-gsub("#GasScenario", gasPriceScenario[1], xmlFileContent)
for(policyNo in seq(1,length(co2scenario))){
xmlFileContent<-gsub(names(co2scenario)[policyNo], co2scenario[policyNo], xmlFileContent)
}
for(policyNo in seq(1,length(resScenario[[1]]))){
xmlFileContent<-gsub(names(resScenario[[1]])[policyNo], resScenario[[1]][policyNo], xmlFileContent)
}
for(policyNo in seq(1,length(interestRateScenario))){
xmlFileContent<-gsub(names(interestRateScenario)[policyNo], interestRateScenario[policyNo], xmlFileContent)
}
#print(paste("~/Desktop/emlabGen/scenario/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",fuelPriceScenarios[1],"-",demandGrowthScenarios[1],"-",microId,".xml", sep=""))
writeLines(xmlFileContent, paste("~/Desktop/inputScenario/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",names(resPolicyScenarios)[resScenarioNo],"-",fuelPriceScenarios[1],"-",demandGrowthScenarios[1],"-",names(interestRateScenarios)[interestRateScenarioNo],"-",microId,".xml", sep=""))
}
co2scenarioNo<-co2scenarioNo+1
}
interestRateScenarioNo<-interestRateScenarioNo+1
}
#CoalScenario
#GasScenario
#minCWEstart
#minCWEincrement
#minGBstart
#minGBincrement
#minCO2start
#minCO2increment
#maxCO2start
#maxCO2increment
## This file was used to creater the scenario file for the paper
## "Cross-border electricity market effects due to price caps in an emission trading system: An agent-based approach"
##------ Standard scenarios: 3x Fuel Scenarios, 5x policy scenarios, 3x renewable scenarios, 120 Monte-Carlo runs ----
# Step 1 building the scenarios: insert dataframe and read input scenario file.
xmlFilePath<-"~/Desktop/input/RES-SR.xml"
filestump<-'RES-SR-'
# Step 2 building the scenarios: make separate data vectors
fuelPriceScenarioLength=1
microScenarioLength=140
coalPriceScenario=c("Coal.Medium","Coal.Low","Coal.High")
gasPriceScenario=c("NaturalGas.Medium","NaturalGas.Low","NaturalGas.High")
fuelPriceScenarios = c("DeccCentral","DeccLow","DeccHigh")
demandGrowthScenarios = c("demandCentral")
microScenarioNo<-seq(1,microScenarioLength)
#Fixed parameters:
# Step 3 building the scenarios: estimating the last three parameters
#${initial_propensity}
for (fuelId in seq(1:fuelPriceScenarioLength)){
for(demandId in seq(1:length(demandGrowthScenarios))){
for (microId in seq(1:microScenarioLength)){
xmlFileContent<-readLines(xmlFilePath, encoding = "UTF-8")
xmlFileContent<-gsub("#fuelPricePathAndFileName", paste("/data/stoichasticFuelPrices/fuelPrices-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#demandPathandFilename", paste("/data/stoichasticDemandDE/demand-",microId,".csv", sep="") , xmlFileContent)
#print(paste("~/Desktop/emlabGen/scenario/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",fuelPriceScenarios[fuelId],"-",demandGrowthScenarios[demandId],"-",microId,".xml", sep=""))
writeLines(xmlFileContent, paste("~/emlab-generation/emlab-generation/src/main/resources/scenarios/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",names(resPolicyScenarios)[resScenarioNo],"-",fuelPriceScenarios[fuelId],"-",demandGrowthScenarios[demandId],"-",microId,".xml", sep=""))
}
}
}
##------ CO2 price floor sensitivity: 1x Fuel Scenarios, 5x4 policy scenarios, 1x renewable scenarios, 120 Monte-Carlo runs ----
for (microId in seq(1:microScenarioLength)){
xmlFileContent<-readLines(xmlFilePath, encoding = "UTF-8")
xmlFileContent<-gsub("#fuelPricePathAndFileName", paste("/data/stochasticFuelPrices/fuelPrices-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#demandPathandFilename", paste("/data/stochasticDemandDE/demand-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#CoalScenario", coalPriceScenario[1], xmlFileContent)
xmlFileContent<-gsub("#GasScenario", gasPriceScenario[1], xmlFileContent)
writeLines(xmlFileContent, paste("~/Desktop/input/",filestump,microId,".xml", sep=""))
}
## This file was used to creater the scenario file for the paper
## "Cross-border electricity market effects due to price caps in an emission trading system: An agent-based approach"
##------ Standard scenarios: 3x Fuel Scenarios, 5x policy scenarios, 3x renewable scenarios, 120 Monte-Carlo runs ----
# Step 1 building the scenarios: insert dataframe and read input scenario file.
xmlFilePath<-"~/Desktop/input/RES-BL.xml"
filestump<-'RES-BL-'
# Step 2 building the scenarios: make separate data vectors
fuelPriceScenarioLength=1
microScenarioLength=140
coalPriceScenario=c("Coal.Medium","Coal.Low","Coal.High")
gasPriceScenario=c("NaturalGas.Medium","NaturalGas.Low","NaturalGas.High")
fuelPriceScenarios = c("DeccCentral","DeccLow","DeccHigh")
demandGrowthScenarios = c("demandCentral")
microScenarioNo<-seq(1,microScenarioLength)
#Fixed parameters:
# Step 3 building the scenarios: estimating the last three parameters
#${initial_propensity}
for (fuelId in seq(1:fuelPriceScenarioLength)){
for(demandId in seq(1:length(demandGrowthScenarios))){
for (microId in seq(1:microScenarioLength)){
xmlFileContent<-readLines(xmlFilePath, encoding = "UTF-8")
xmlFileContent<-gsub("#fuelPricePathAndFileName", paste("/data/stoichasticFuelPrices/fuelPrices-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#demandPathandFilename", paste("/data/stoichasticDemandDE/demand-",microId,".csv", sep="") , xmlFileContent)
#print(paste("~/Desktop/emlabGen/scenario/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",fuelPriceScenarios[fuelId],"-",demandGrowthScenarios[demandId],"-",microId,".xml", sep=""))
writeLines(xmlFileContent, paste("~/emlab-generation/emlab-generation/src/main/resources/scenarios/",filestump,names(co2PolicyScenarios)[co2scenarioNo],"-",names(resPolicyScenarios)[resScenarioNo],"-",fuelPriceScenarios[fuelId],"-",demandGrowthScenarios[demandId],"-",microId,".xml", sep=""))
}
}
}
##------ CO2 price floor sensitivity: 1x Fuel Scenarios, 5x4 policy scenarios, 1x renewable scenarios, 120 Monte-Carlo runs ----
for (microId in seq(1:microScenarioLength)){
xmlFileContent<-readLines(xmlFilePath, encoding = "UTF-8")
xmlFileContent<-gsub("#fuelPricePathAndFileName", paste("/data/stochasticFuelPrices/fuelPrices-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#demandPathandFilename", paste("/data/stochasticDemandDE/demand-",microId,".csv", sep="") , xmlFileContent)
xmlFileContent<-gsub("#CoalScenario", coalPriceScenario[1], xmlFileContent)
xmlFileContent<-gsub("#GasScenario", gasPriceScenario[1], xmlFileContent)
writeLines(xmlFileContent, paste("~/Desktop/input/",filestump,microId,".xml", sep=""))
}
setwd("~/emlab-generation/rscripts/")
library(ggplot2)
source("rConfig.R")
source("batchRunAnalysis.R")
setwd(analysisFolder)
bigDF <- getDataFrameForModelRunsInFolder(resultFolder)
bigDF <- addSupplyRatios(bigDF)
plot <- plotTimeSeriesWithConfidenceIntervalByFacettedGroup(df=bigDF,variable="SupplyRatio_Country.A",ylabel="Supply Ratio")
plot
moltenCashBalances<-melt(bigDF, id.vars=c("tick", "modelRun"), measure.vars=c("ProducerCash_Energy.Producer.A","ProducerCash_Energy.Producer.B","ProducerCash_Energy.Producer.C","ProducerCash_Energy.Producer.D"))
producerCashBalancePlot<-ggplot(moltenCashBalances, aes(x=tick, y=value, group=modelRun))+
stat_summary(fun.data="median_hilow", conf.int=.5, geom="smooth", colour="black") +
stat_summary(fun.data="median_hilow", conf.int=.95, geom="smooth", colour="black") +
facet_grid(modelRun ~ variable)+
theme(legend.position="none")+
xlab("Time [a]")+
ylab("Cash Balance [EUR]")
producerCashBalancePlot
setwd("/Users/pradyumnabhagwat/Desktop/inputScenario/stoichasticFuelPrices/")
fuelPriceOutputFolder="~/Desktop/inputScenario/stoichasticFuelPrices/"
myDate1 <-read.csv(file = "Year1.csv", nrows=1, header=FALSE, sep = ",")
for (i in 1:140){
myDate2 <-read.csv(file = "uranium1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate3 <-read.csv(file = "lignite1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate4 <-read.csv(file = "biomass1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate5 <-read.csv(file = "coal1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate6 <-read.csv(file = "gas1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate <- rbind(myDate1, myDate2, myDate3, myDate4, myDate5, myDate6)
write.table(myDate, file=paste(fuelPriceOutputFolder, "fuelPrices-",i,".csv",sep=""), sep = ",", row.names=FALSE, col.names=FALSE, quote=FALSE)
rm(myDate, myDate2, myDate3, myDate4, myDate5, myDate6)
}
setwd("/Users/pradyumnabhagwat/Desktop/inputScenario/stoichasticFuelPrices/")
fuelPriceOutputFolder="~/Desktop/inputScenario/stoichasticFuelPrices/"
myDate1 <-read.csv2(file = "Year1.csv", nrows=1, header=FALSE, sep = ",")
for (i in 1:140){
myDate2 <-read.csv2(file = "uranium1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate3 <-read.csv2(file = "lignite1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate4 <-read.csv2(file = "biomass1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate5 <-read.csv2(file = "coal1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate6 <-read.csv2(file = "gas1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate <- rbind(myDate1, myDate2, myDate3, myDate4, myDate5, myDate6)
write.table(myDate, file=paste(fuelPriceOutputFolder, "fuelPrices-",i,".csv",sep=""), sep = ",", row.names=FALSE, col.names=FALSE, quote=FALSE)
rm(myDate, myDate2, myDate3, myDate4, myDate5, myDate6)
}
setwd("/Users/pradyumnabhagwat/Desktop/inputScenario/stoichasticFuelPrices/")
fuelPriceOutputFolder="~/Desktop/inputScenario/stoichasticFuelPrices/"
myDate1 <-read.csv(file = "Year1.csv", nrows=1, header=FALSE, sep = ",")
for (i in 1:140){
myDate2 <-read.csv(file = "uranium1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate3 <-read.csv(file = "lignite1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate4 <-read.csv(file = "biomass1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate5 <-read.csv(file = "coal1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate6 <-read.csv(file = "gas1.csv", nrows=1, header=FALSE, sep = ",", skip=i)
myDate <- rbind(myDate1, myDate2, myDate3, myDate4, myDate5, myDate6)
write.csv(myDate, file=paste(fuelPriceOutputFolder, "fuelPrices-",i,".csv",sep=""), sep = ",", row.names=FALSE, col.names=FALSE, quote=FALSE)
rm(myDate, myDate2, myDate3, myDate4, myDate5, myDate6)
}
warnings()
